[{"/home/javed/Documents/Employee_portal_front_end/src/index.tsx":"1","/home/javed/Documents/Employee_portal_front_end/src/app.tsx":"2","/home/javed/Documents/Employee_portal_front_end/src/components/input/Input.tsx":"3","/home/javed/Documents/Employee_portal_front_end/src/pages/login/Login.tsx":"4","/home/javed/Documents/Employee_portal_front_end/src/components/button/Button.tsx":"5","/home/javed/Documents/Employee_portal_front_end/src/pages/Employees/Employees.tsx":"6","/home/javed/Documents/Employee_portal_front_end/src/components/navbar/Navbar.tsx":"7","/home/javed/Documents/Employee_portal_front_end/src/components/header/Header.tsx":"8","/home/javed/Documents/Employee_portal_front_end/src/components/subheader/Subheader.tsx":"9","/home/javed/Documents/Employee_portal_front_end/src/components/status/Status.tsx":"10","/home/javed/Documents/Employee_portal_front_end/src/pages/Employees/Employee_data.tsx":"11","/home/javed/Documents/Employee_portal_front_end/src/pages/EmployeeDetails/EmployeeDetails.tsx":"12","/home/javed/Documents/Employee_portal_front_end/src/components/detailfield/DetailField.tsx":"13","/home/javed/Documents/Employee_portal_front_end/src/pages/CreateEmployee/CreateEmployee.tsx":"14","/home/javed/Documents/Employee_portal_front_end/src/components/forminput/FormInput.tsx":"15","/home/javed/Documents/Employee_portal_front_end/src/components/dropdown/DropDown.tsx":"16","/home/javed/Documents/Employee_portal_front_end/src/components/editdelete/EditDelete.tsx":"17","/home/javed/Documents/Employee_portal_front_end/src/reducers/index.js":"18","/home/javed/Documents/Employee_portal_front_end/src/components/popup/Popup.tsx":"19","/home/javed/Documents/Employee_portal_front_end/src/store.ts":"20","/home/javed/Documents/Employee_portal_front_end/src/actions/employeeActions.ts":"21","/home/javed/Documents/Employee_portal_front_end/src/reducers/employeeReducer.ts":"22","/home/javed/Documents/Employee_portal_front_end/src/pages/Employees/api.ts":"23","/home/javed/Documents/Employee_portal_front_end/src/pages/login/api.ts":"24","/home/javed/Documents/Employee_portal_front_end/src/services/index.ts":"25","/home/javed/Documents/Employee_portal_front_end/src/pages/EmployeeDetails/api.ts":"26","/home/javed/Documents/Employee_portal_front_end/src/pages/CreateEmployee/api.ts":"27"},{"size":298,"mtime":1692003799589,"results":"28","hashOfConfig":"29"},{"size":847,"mtime":1692015119652,"results":"30","hashOfConfig":"29"},{"size":677,"mtime":1692334436472,"results":"31","hashOfConfig":"29"},{"size":2772,"mtime":1692349948402,"results":"32","hashOfConfig":"29"},{"size":596,"mtime":1692334016125,"results":"33","hashOfConfig":"29"},{"size":4349,"mtime":1692349911971,"results":"34","hashOfConfig":"29"},{"size":517,"mtime":1692334497971,"results":"35","hashOfConfig":"29"},{"size":454,"mtime":1692334399856,"results":"36","hashOfConfig":"29"},{"size":988,"mtime":1692275258168,"results":"37","hashOfConfig":"29"},{"size":343,"mtime":1692334612579,"results":"38","hashOfConfig":"29"},{"size":507,"mtime":1691849088268,"results":"39","hashOfConfig":"29"},{"size":1827,"mtime":1692349965905,"results":"40","hashOfConfig":"29"},{"size":688,"mtime":1692334093998,"results":"41","hashOfConfig":"29"},{"size":9915,"mtime":1692349998312,"results":"42","hashOfConfig":"29"},{"size":692,"mtime":1692334384012,"results":"43","hashOfConfig":"29"},{"size":904,"mtime":1692334186942,"results":"44","hashOfConfig":"29"},{"size":838,"mtime":1692334272869,"results":"45","hashOfConfig":"29"},{"size":191,"mtime":1692004646956,"results":"46","hashOfConfig":"29"},{"size":890,"mtime":1692334517199,"results":"47","hashOfConfig":"29"},{"size":544,"mtime":1692182526503,"results":"48","hashOfConfig":"29"},{"size":500,"mtime":1692333926450,"results":"49","hashOfConfig":"29"},{"size":2329,"mtime":1692168862485,"results":"50","hashOfConfig":"29"},{"size":970,"mtime":1692335258316,"results":"51","hashOfConfig":"29"},{"size":404,"mtime":1692335258316,"results":"52","hashOfConfig":"29"},{"size":577,"mtime":1692271011376,"results":"53","hashOfConfig":"29"},{"size":683,"mtime":1692335258316,"results":"54","hashOfConfig":"29"},{"size":1944,"mtime":1692335258316,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"r3i1hl",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/javed/Documents/Employee_portal_front_end/src/index.tsx",[],[],[],"/home/javed/Documents/Employee_portal_front_end/src/app.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/components/input/Input.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/login/Login.tsx",["143","144"],[],"import \"./Login.css\";\nimport Input from \"../../components/input/Input\";\nimport { FC, useEffect, useState } from \"react\";\nimport Button from \"../../components/button/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLoginMutation } from \"./api\";\nimport { useLazyGetEmployeeListQuery } from \"../Employees/api\";\n\nconst Login: FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const [login, { data, isSuccess }] = useLoginMutation();\n  const [getEmployees, { data: employeeData, isSuccess: getSuccess }] =\n    useLazyGetEmployeeListQuery();\n  const [showError, setShowError] = useState(false);\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n    console.log(username);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n    console.log(password);\n  };\n\n  const handleLogin = () => {\n    if (username.length === 0 || password.length === 0) setShowError(true);\n    else\n      login({\n        username: username,\n        password: password,\n      });\n  };\n  useEffect(() => {\n    if (data && isSuccess) {\n      console.log(data.data.token);\n      localStorage.setItem(\"Auth\", data.data.token);\n      getEmployees();\n    }\n  }, [data, isSuccess]);\n\n  useEffect(() => {\n    if (employeeData && getSuccess) {\n      localStorage.setItem(\n        \"Role\",\n        employeeData.data.find((obj) => obj.username === username).role\n      );\n      navigate(\"/employees\");\n    }\n  }, [employeeData, getSuccess]);\n  return (\n    <section className=\"login-section\">\n      <div className=\"login-left\">\n        <img className=\"login-image\" alt=\"banner\" src=\"assets/img/banner.png\" />\n      </div>\n      <div className=\"login-right\">\n        <div>\n          <div className=\"img-class\">\n            <img\n              className=\"login-logo\"\n              alt=\"logo\"\n              src=\"assets/img/kv-logo.png\"\n            />\n          </div>\n          <div className=\"form\">\n            <Input\n              label=\"Username\"\n              value={username}\n              type=\"text\"\n              onChange={handleUsernameChange}\n            />\n            <br></br>\n            <Input\n              label=\"Password\"\n              value={password}\n              type=\"password\"\n              onChange={handlePasswordChange}\n            />\n            <Button text=\"Login\" type=\"submit\" onClick={handleLogin} />\n          </div>\n\n          <br></br>\n\n          {showError && (\n            <div>\n              <span className=\"error\">\n                Username and Password must atleast contain one character\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","/home/javed/Documents/Employee_portal_front_end/src/components/button/Button.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/Employees/Employees.tsx",["145","146","147","148","149","150","151"],[],"import \"./Employees.css\";\nimport { FC, useEffect, useState } from \"react\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport Header from \"../../components/header/Header\";\nimport Subheader from \"../../components/subheader/Subheader\";\nimport Status from \"../../components/status/Status\";\n// import employeeData from './Employee_data';\nimport { useNavigate } from \"react-router-dom\";\nimport EditDelete from \"../../components/editdelete/EditDelete\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Popup from \"../../components/popup/Popup\";\nimport { deleteEmployee } from \"../../actions/employeeActions\";\nimport { useDeleteEmployeeMutation, useGetEmployeeListQuery } from \"./api\";\nimport employeeData from \"./Employee_data\";\n\n\nconst Employees: FC = () => {\n  const table_header = [\n    \"Employee Name\",\n    \"Employee Id\",\n    \"Joining Date\",\n    \"Role\",\n    \"Status\",\n    \"Experience\",\n  ];\n  const [showDelete, setShowDelete] = useState(false);\n  const [deleteId, setDeleteId] = useState();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [deleteEmployee, { data: deleteData, isSuccess: deleteSuccess }] =\n    useDeleteEmployeeMutation();\n\n  const { data } = useGetEmployeeListQuery();\n\n  let employeeData = [];\n  data?.data.forEach((emp) => {\n    const temp = {\n      name: emp.name,\n      id: emp.id,\n      joiningDate: emp.joining_date,\n      Role: emp.role,\n      status: emp.status,\n      Experience: emp.experience,\n    };\n    employeeData.push(temp);\n  });\n  console.log(data?.data);\n  if (\n    localStorage.getItem(\"Role\") === \"Admin\" ||\n    localStorage.getItem(\"Role\") === \"HR\"\n  ) {\n    table_header.push(\"Action\");\n  }\n  const checkColumn = (emp, ele) => {\n    if (ele !== \"status\") {\n      return <td className=\"list-items\">{emp[ele]}</td>;\n    } else\n      return (\n        <td className=\"\">\n          <Status label={`${emp[ele]}`} />\n        </td>\n      );\n  };\n  const handleclick = () => {\n    navigate(\"/employees/create\");\n  };\n  const handleDeleteClick = (e, id) => {\n    setShowDelete(!showDelete);\n    setDeleteId(id);\n    e.stopPropagation();\n  };\n  const handleCancelClick = (e) => {\n    setShowDelete(false);\n    setDeleteId(null);\n    e.stopPropagation();\n  };\n\n  const handleConfirmClick = (e) => {\n    setShowDelete(false);\n    deleteEmployee(deleteId);\n\n    e.stopPropagation();\n  };\n  const handleEditClick = (e, id) => {\n    navigate(`/employees/edit/${id}`);\n    e.stopPropagation();\n  };\n\n  \n  return (\n    <section className=\"employee-section\">\n      <Navbar />\n      {showDelete && (\n        <Popup\n          onConfirmClickFunc={handleConfirmClick}\n          onCancelClickFunc={handleCancelClick}\n        />\n      )}\n\n      <div className=\"employee-right\">\n        <Header />\n        <Subheader\n          headerText=\"Employee List\"\n          icon=\"assets/icons/plus.png\"\n          iconText=\"Create Employee\"\n          onclickfunc={handleclick}\n        />\n\n        <div className=\"table-container\">\n          <table className=\"table\">\n            <thead className=\"table-row-container\">\n              <tr className=\"table-header\">\n                {table_header.map((ele) => {\n                  return <th className=\"table-element\">{ele}</th>;\n                })}\n              </tr>\n            </thead>\n            <tbody className=\"table-row-container\">\n              {employeeData.map((emp) => {\n                return (\n                  <tr\n                    onClick={() => {\n                      navigate(`/employees/${emp.id}`);\n                    }}\n                    className=\"table-row\"\n                  >\n                    {Object.keys(emp).map((ele) => checkColumn(emp, ele))}\n                    {(localStorage.getItem(\"Role\") === \"Admin\" ||\n                      localStorage.getItem(\"Role\") === \"HR\") && (\n                      <td>\n                        <EditDelete\n                          onDeleteclickfunc={(e) =>\n                            handleDeleteClick(e, emp.id)\n                          }\n                          onEditclickfunc={(e) => handleEditClick(e, emp.id)}\n                        />\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default Employees;\n","/home/javed/Documents/Employee_portal_front_end/src/components/navbar/Navbar.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/components/header/Header.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/components/subheader/Subheader.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/components/status/Status.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/Employees/Employee_data.tsx",[],[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/EmployeeDetails/EmployeeDetails.tsx",["152"],[],"import Navbar from \"../../components/navbar/Navbar\";\nimport Header from \"../../components/header/Header\";\nimport Subheader from \"../../components/subheader/Subheader\";\nimport \"./EmployeeDetails.css\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport employeeData from \"../Employees/Employee_data\";\nimport DetailField from \"../../components/detailfield/DetailField\";\nimport { useGetEmployeeQuery } from \"./api\";\nconst EmployeeDetails = () => {\n  const { id } = useParams();\n  // const employee= employeeData.find((emp)=>emp.id===Number(id))\n  const { data } = useGetEmployeeQuery(id);\n  const navigate = useNavigate();\n  const emp = data?.data;\n  const fieldMap = [\n    [\"name\", \"Name\"],\n    [\"id\", \"ID\"],\n    [\"joiningDate\", \"Joining Date\"],\n    [\"Role\", \"Role\"],\n    [\"status\", \"Status\"],\n    [\"Experience\", \"Experience\"],\n  ];\n\n  const employee = {\n    name: emp?.name,\n    id: emp?.id,\n    joiningDate: emp?.joining_date,\n    Role: emp?.role,\n    status: emp?.status,\n    Experience: emp?.experience,\n  };\n  const handleclick = () => {\n    navigate(`/employees/edit/${id}`);\n  };\n\n  return (\n    <section className=\"employee-section\">\n      <Navbar />\n\n      <div className=\"employee-right\">\n        <Header />\n        <Subheader\n          headerText=\"Employee List\"\n          icon=\"/assets/icons/edit.png\"\n          iconText=\"Edit\"\n          onclickfunc={handleclick}\n        />\n        <div className=\"employee-details\">\n          {/* {Object.keys(employee).map((ele)=> <DetailField key={ele} detail={ele} value={employee[ele]}  />)} */}\n          {fieldMap.map((ele) => (\n            <DetailField\n              key={ele[1]}\n              detail={ele[1]}\n              value={employee[ele[0]]}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default EmployeeDetails;\n","/home/javed/Documents/Employee_portal_front_end/src/components/detailfield/DetailField.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/CreateEmployee/CreateEmployee.tsx",["153","154","155","156","157","158","159","160","161"],["162"],"import Navbar from \"../../components/navbar/Navbar\";\nimport Header from \"../../components/header/Header\";\nimport \"./CreateEmployee.css\";\nimport FormInput from \"../../components/forminput/FormInput\";\nimport { useEffect, useState } from \"react\";\nimport DropDown from \"../../components/dropdown/DropDown\";\nimport Button from \"../../components/button/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { editEmployee, addEmployee } from \"../../actions/employeeActions\";\nimport {\n  useGetEmployeeQuery,\n  useLazyGetEmployeeQuery,\n} from \"../EmployeeDetails/api\";\nimport {\n  useCreateEmployeeMutation,\n  useEditEmployeeMutation,\n  useGetAllDepartmentsQuery,\n  useGetRolesQuery,\n} from \"./api\";\n\nconst CreateEmployee = () => {\n  const { id } = useParams();\n  const [dept, setDept] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const stat = [\"Active\", \"Inactive\", \"Probation\"];\n\n  const [getEmp, { data, isSuccess }] = useLazyGetEmployeeQuery();\n  const [createEmployee, { data: createData, isSuccess: createSuccess }] =\n    useCreateEmployeeMutation();\n  const [editEmployee, { data: editData, isSuccess: editSuccess }] =\n    useEditEmployeeMutation();\n  const { data: depart } = useGetAllDepartmentsQuery();\n  const { data: roleList } = useGetRolesQuery();\n\n  const [employeeName, setEmployeename] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [joiningDate, setJoiningDate] = useState(\"\");\n  const [experience, setExperience] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [addressLine1, setAddressLine1] = useState(\"\");\n  const [addressLine2, setAddressLine2] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [pincode, setPincode] = useState(\"\");\n\n  useEffect(() => {\n    if (id) {\n      getEmp(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setEmployeename(data?.data.name);\n    setUserName(data?.data.username);\n    setJoiningDate(data?.data.joining_date);\n    setExperience(data?.data.experience);\n    // setDepartment(`${data?.data.departmentId}`);\n    setRole(data?.data.role);\n    setStatus(data?.data.status);\n    setAddressLine1(data?.data.address.address_line_1);\n    setAddressLine2(data?.data.address.address_line_2);\n    setState(data?.data.address.state);\n    setCity(data?.data.address.city);\n    setCountry(data?.data.address.country);\n    setPincode(data?.data.address.pincode);\n  }, [data]);\n  useEffect(() => {\n    if (depart?.data && dept.length === 0) {\n      setDept(depart.data.map((dep) => dep.name));\n    }\n    if (depart?.data && data?.data) {\n      setDepartment(\n        (depart.data.find((dep) => dep.id === data?.data?.departmentId) || {})\n          .name\n      );\n    }\n  }, [depart, data]);\n\n  useEffect(() => {\n    roleList?.data.data.forEach((rol) =>\n      setRoles((curr_rol) => [...curr_rol, rol])\n    );\n  }, [roleList]);\n  useEffect(() => {\n    if (createData && createSuccess) {\n      navigate(\"/employees\");\n    }\n  }, [createSuccess]);\n\n  useEffect(() => {\n    if (editData && editSuccess) {\n      navigate(\"/employees\");\n    }\n  }, [editSuccess]);\n\n  const handleEmployeeNameChange = (e) => {\n    setEmployeename(e.target.value);\n    console.log(employeeName);\n  };\n  const handleUserNameChange = (e) => {\n    setUserName(e.target.value);\n    console.log(employeeName);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n    console.log(employeeName);\n  };\n  const handleJoiningDateChange = (e) => {\n    setJoiningDate(e.target.value);\n    console.log(employeeName);\n  };\n  const handleExperienceChange = (e) => {\n    setExperience(e.target.value);\n    console.log(employeeName);\n  };\n  const handleDepartmentChange = (e) => {\n    setDepartment(e.target.value);\n    console.log(employeeName);\n  };\n  const handleRoleChange = (e) => {\n    setRole(e.target.value);\n    console.log(role);\n  };\n  const handleStatusChange = (e) => {\n    setStatus(e.target.value);\n    console.log(status);\n  };\n  const handlePincodeChange = (e) => {\n    setPincode(e.target.value);\n    console.log(employeeName);\n  };\n  const handleAddressLine1Change = (e) => {\n    setAddressLine1(e.target.value);\n    console.log(employeeName);\n  };\n  const handleAddressLine2Change = (e) => {\n    setAddressLine2(e.target.value);\n    console.log(employeeName);\n  };\n  const handleCityChange = (e) => {\n    setCity(e.target.value);\n    console.log(employeeName);\n  };\n  const handleStateChange = (e) => {\n    setState(e.target.value);\n    console.log(employeeName);\n  };\n  const handleCountryChange = (e) => {\n    setCountry(e.target.value);\n    console.log(employeeName);\n  };\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    console.log(\"button clicked\");\n\n    id\n      ? editEmployee({\n          id: Number(id),\n          body: {\n            name: employeeName,\n            username: userName,\n            password: password,\n            experience: Number(experience),\n            departmentId: depart?.data.find((obj) => obj.name === department)\n              ?.id,\n            joining_date: joiningDate,\n            status: status,\n            role: role,\n            address: {\n              address_line_1: addressLine1,\n              address_line_2: addressLine2,\n              city: city,\n              state: state,\n              country: country,\n              pincode: pincode,\n            },\n          },\n        })\n      : createEmployee({\n          name: employeeName,\n          username: userName,\n          password: password,\n          experience: Number(experience),\n          departmentId: depart?.data.find((obj) => obj.name === department)?.id,\n          joining_date: joiningDate,\n          role: role,\n          status: status,\n          address: {\n            address_line_1: addressLine1,\n            address_line_2: addressLine2,\n            city: city,\n            state: state,\n            country: country,\n            pincode: pincode,\n          },\n        });\n  };\n\n  return (\n    <div>\n      <section className=\"employee-section\">\n        <Navbar />\n\n        <div className=\"employee-right\">\n          <Header />\n          <div className=\"subheader\">\n            <div className=\"heading-container\">\n              {id ? (\n                <span className=\"heading\">Edit Employee</span>\n              ) : (\n                <span className=\"heading\">Create Employee</span>\n              )}\n            </div>\n          </div>\n          <div className=\"form-container\">\n            <div className=\"input-form-container\">\n              <FormInput\n                label=\"Employee Name\"\n                value={employeeName}\n                type=\"text\"\n                onChange={handleEmployeeNameChange}\n              />\n              <FormInput\n                label=\"User Name\"\n                value={userName}\n                type=\"text\"\n                onChange={handleUserNameChange}\n              />\n              <FormInput\n                label=\"Password\"\n                value={password}\n                type=\"password\"\n                onChange={handlePasswordChange}\n              />\n              <FormInput\n                label=\"Joining Date\"\n                value={joiningDate}\n                type=\"text\"\n                onChange={handleJoiningDateChange}\n              />\n              <FormInput\n                label=\"Experience\"\n                value={experience}\n                type=\"text\"\n                onChange={handleExperienceChange}\n              />\n              <DropDown\n                label=\"Department\"\n                value={department}\n                options={dept ? dept : []}\n                onChange={handleDepartmentChange}\n              />\n              <DropDown\n                label=\"Role\"\n                value={role}\n                options={roles ? roles : []}\n                onChange={handleRoleChange}\n              />\n              <DropDown\n                label=\"Status\"\n                value={status}\n                options={stat}\n                onChange={handleStatusChange}\n              />\n\n              <FormInput\n                label=\"Address Line 1\"\n                value={addressLine1}\n                type=\"text\"\n                onChange={handleAddressLine1Change}\n              />\n              <FormInput\n                label=\"Address Line 2\"\n                value={addressLine2}\n                type=\"text\"\n                onChange={handleAddressLine2Change}\n              />\n              <FormInput\n                label=\"City\"\n                value={city}\n                type=\"text\"\n                onChange={handleCityChange}\n              />\n              <FormInput\n                label=\"State\"\n                value={state}\n                type=\"text\"\n                onChange={handleStateChange}\n              />\n              <FormInput\n                label=\"Country\"\n                value={country}\n                type=\"text\"\n                onChange={handleCountryChange}\n              />\n              <FormInput\n                label=\"Pincode\"\n                value={pincode}\n                type=\"text\"\n                onChange={handlePincodeChange}\n              />\n            </div>\n            <div className=\"address-container\">\n              <div className=\"buttons-container\">\n                <Button text=\"Create\" type=\"submit\" onClick={handleSubmit} />\n                <Button text=\"Cancel\" type=\"reset\" onClick={() => {}} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default CreateEmployee;\n","/home/javed/Documents/Employee_portal_front_end/src/components/forminput/FormInput.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/components/dropdown/DropDown.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/components/editdelete/EditDelete.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/reducers/index.js",[],[],"/home/javed/Documents/Employee_portal_front_end/src/components/popup/Popup.tsx",[],[],"/home/javed/Documents/Employee_portal_front_end/src/store.ts",[],[],"/home/javed/Documents/Employee_portal_front_end/src/actions/employeeActions.ts",[],[],"/home/javed/Documents/Employee_portal_front_end/src/reducers/employeeReducer.ts",[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/Employees/api.ts",[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/login/api.ts",[],[],"/home/javed/Documents/Employee_portal_front_end/src/services/index.ts",[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/EmployeeDetails/api.ts",[],[],"/home/javed/Documents/Employee_portal_front_end/src/pages/CreateEmployee/api.ts",[],[],{"ruleId":"163","severity":1,"message":"164","line":40,"column":6,"nodeType":"165","endLine":40,"endColumn":23,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":50,"column":6,"nodeType":"165","endLine":50,"endColumn":32,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":14,"nodeType":"171","messageId":"172","endLine":2,"endColumn":23},{"ruleId":"169","severity":1,"message":"173","line":10,"column":23,"nodeType":"171","messageId":"172","endLine":10,"endColumn":34},{"ruleId":"169","severity":1,"message":"174","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":24},{"ruleId":"169","severity":1,"message":"175","line":14,"column":8,"nodeType":"171","messageId":"172","endLine":14,"endColumn":20},{"ruleId":"169","severity":1,"message":"176","line":29,"column":9,"nodeType":"171","messageId":"172","endLine":29,"endColumn":17},{"ruleId":"169","severity":1,"message":"177","line":30,"column":34,"nodeType":"171","messageId":"172","endLine":30,"endColumn":44},{"ruleId":"169","severity":1,"message":"178","line":30,"column":57,"nodeType":"171","messageId":"172","endLine":30,"endColumn":70},{"ruleId":"169","severity":1,"message":"175","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":20},{"ruleId":"169","severity":1,"message":"173","line":8,"column":23,"nodeType":"171","messageId":"172","endLine":8,"endColumn":34},{"ruleId":"169","severity":1,"message":"179","line":10,"column":10,"nodeType":"171","messageId":"172","endLine":10,"endColumn":22},{"ruleId":"169","severity":1,"message":"180","line":10,"column":24,"nodeType":"171","messageId":"172","endLine":10,"endColumn":35},{"ruleId":"169","severity":1,"message":"181","line":12,"column":3,"nodeType":"171","messageId":"172","endLine":12,"endColumn":22},{"ruleId":"169","severity":1,"message":"182","line":28,"column":26,"nodeType":"171","messageId":"172","endLine":28,"endColumn":35},{"ruleId":"163","severity":1,"message":"183","line":83,"column":6,"nodeType":"165","endLine":83,"endColumn":20,"suggestions":"184"},{"ruleId":"163","severity":1,"message":"185","line":94,"column":6,"nodeType":"165","endLine":94,"endColumn":21,"suggestions":"186"},{"ruleId":"163","severity":1,"message":"187","line":100,"column":6,"nodeType":"165","endLine":100,"endColumn":19,"suggestions":"188"},{"ruleId":"169","severity":1,"message":"176","line":159,"column":9,"nodeType":"171","messageId":"172","endLine":159,"endColumn":17},{"ruleId":"163","severity":1,"message":"189","line":56,"column":6,"nodeType":"165","endLine":56,"endColumn":8,"suggestions":"190","suppressions":"191"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.","ArrayExpression",["192"],"React Hook useEffect has missing dependencies: 'navigate' and 'username'. Either include them or remove the dependency array.",["193"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'deleteEmployee' is defined but never used.","'employeeData' is defined but never used.","'dispatch' is assigned a value but never used.","'deleteData' is assigned a value but never used.","'deleteSuccess' is assigned a value but never used.","'editEmployee' is defined but never used.","'addEmployee' is defined but never used.","'useGetEmployeeQuery' is defined but never used.","'isSuccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dept.length'. Either include it or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'createData' and 'navigate'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'editData' and 'navigate'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'getEmp' and 'id'. Either include them or remove the dependency array.",["197"],["198"],{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"kind":"211","justification":"212"},"Update the dependencies array to be: [data, getEmployees, isSuccess]",{"range":"213","text":"214"},"Update the dependencies array to be: [employeeData, getSuccess, navigate, username]",{"range":"215","text":"216"},"Update the dependencies array to be: [depart, data, dept.length]",{"range":"217","text":"218"},"Update the dependencies array to be: [createData, createSuccess, navigate]",{"range":"219","text":"220"},"Update the dependencies array to be: [editData, editSuccess, navigate]",{"range":"221","text":"222"},"Update the dependencies array to be: [getEmp, id]",{"range":"223","text":"224"},"directive","",[1286,1303],"[data, getEmployees, isSuccess]",[1531,1557],"[employeeData, getSuccess, navigate, username]",[3043,3057],"[depart, data, dept.length]",[3296,3311],"[createData, createSuccess, navigate]",[3411,3424],"[editData, editSuccess, navigate]",[2150,2152],"[getEmp, id]"]